module.exports = {
  zh: {
    // 数据库中存储的描述字段
    descriptionField: 'field_desc_zh',
    commonDefineText: '通用类型定义',
    detailDefineText: '详细类型定义',
    requiredText: '必需',
    vmodelSugarText: {
      'Vue(PC)': '支持语法糖 `v-model`',
      'VueNext(PC)': '支持语法糖 `v-model` 或 `v-model:name`',
      'Vue(Mobile)': '支持语法糖 `v-model` 或 `v-model:name`',
    },
    syntaxSugarText: {
      'Vue(PC)': '支持语法糖 `.sync`',
      'VueNext(PC)': '支持语法糖 `v-model:name`',
      'Vue(Mobile)': '支持语法糖 `v-model:name`',
    },
    uncontrolledText: '非受控属性',
    optionsText: '可选项：',
    htmlAttributeText: 'HTML 原生属性',
    tsTypeText: 'TS 类型',
    deprecated: '已废弃',
    extendsText: '继承 ${fieldName} 中的全部属性',
    PlainObjectText: `\`PlainObject\` 不是 \${component} 中的属性，而表示 \${component} 本身支持添加任意属性，\`type PlainObject = {[key: string]: any}\`'`,
    classNameText: '类名',
    styleText: '样式',
    customStyleText: '一般用于开启虚拟化组件节点场景',
  },
  en: {
    descriptionField: 'field_desc_en',
    commonDefineText: 'see more ts definition',
    detailDefineText: 'see more ts definition',
    requiredText: 'required',
    vmodelSugarText: {
      'Vue(PC)': '`v-model` is supported',
      'VueNext(PC)': '`v-model` and `v-model:name` is supported',
      'Vue(Mobile)': '`v-model` and `v-model:name` is supported',
    },
    // syntaxSugarText: 'support syntax sugar',
    syntaxSugarText: {
      'Vue(PC)': '`.sync` is supported',
      'VueNext(PC)': '`v-model:name` is supported',
      'Vue(Mobile)': '`v-model:name` is supported',
    },
    uncontrolledText: 'uncontrolled property',
    optionsText: 'options: ',
    htmlAttributeText: 'html attribute',
    tsTypeText: 'Typescript',
    deprecated: '`deprecated`',
    extendsText: 'extends ${fieldName}',
    PlainObjectText: `\`PlainObject\` is not an attribute of \${component}，it means you can add and attributes to \${component}, \`type PlainObject = {[key: string]: any}\`'`,
    classNameText: 'className of component',
    styleText: 'CSS(Cascading Style Sheets)',
    customStyleText: 'used to set style on virtual component',
  },
};
